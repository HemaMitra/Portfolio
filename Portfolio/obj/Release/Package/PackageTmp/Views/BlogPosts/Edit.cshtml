@model Portfolio.Models.BlogPost

@{
    ViewBag.Title = "Edit";
}

<br>
    <h3 class="asmthead fade-toggle">Edit Blog</h3>

<form action="@Url.Action("Edit")" method="post" enctype="multipart/form-data">
    
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Title)
        @Html.HiddenFor(model => model.Category)
        @Html.HiddenFor(model => model.MediaURL)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">

                @Html.DisplayFor(model => model.Title)
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control", rows = "5", id = "editor" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.MediaURL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.MediaURL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MediaURL, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.MediaURL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                
                @*@Html.EditorFor(model => model.MediaURL, new { htmlAttributes = new { @class = "form-control" } })*@
                <input name="image" type="file" class="form-control" id="fileUpload" value="@Html.DisplayFor(model => model.MediaURL)">
                @Html.ValidationMessageFor(model => model.MediaURL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Published)
                    @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-danger" />
                @Html.ActionLink("Back to List", "AdminIndex", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
    </form>

    @section scripts{
        <script src="~/Scripts/tinymce/tinymce.min.js"></script>
        <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
        <script>
            $(document).ready(function () {
                $("#editor").tinymce({});
            });
        </script>
    }
